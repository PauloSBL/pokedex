modifique esses codigos para utilizar o axios ao inves de request:

arquivo 1:
PokeapiController
const request = require('request');
const Pokemon = require('../models/Pokemon')
const axios = require('axios');

class PokeAPI {
    static async addPokemon(req, res) {
        try {
            const { search } = req.body;
            const url = `https://pokeapi.co/api/v2/pokemon/${search}`;
            const options = {
                httpsAgent: new https.Agent({
                    rejectUnauthorized: false
                })
            };
            const response = await axios.get(url, options);
            const data = response.data;
            res.render('addpokemon', { data });
        } catch (err) {
            console.error(err);
            const data = null;
            res.render('addpokemon', { data });
        }
    }
}



arquivo de rotas:
const express = require('express')
const router = express.Router()

const User = require('../controllers/UsersControllers')
const PokeAPI = require('../controllers/PokeAPIControllers')

const checkAuth = require('../check/checkId').checkAuth

router.get('/verpokemon/:id', checkAuth, User.verPokemon)
router.get('/', checkAuth, User.showPokemons)
router.get('/singup', User.createUser)
router.post('/singup', User.createUserSave)
router.post('/removeuser', User.removeUser)
router.get('/login', User.login)
router.get('/addpokemon', checkAuth, User.addPokemon)
router.get('/removerpokemon/:id', User.removePokemon)
router.post('/searchpokemon', PokeAPI.addPokemon)
router.post('/updatepokemon', User.updatePokemon)
router.post('/addpokemonSave', User.addPokemonSave)
router.get('/editarpokemon/:id', User.editPokemon)
router.get('/logout', User.logout)
router.post('/login', User.loginEnter)

module.exports = router


